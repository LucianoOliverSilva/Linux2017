
Configuracao usuario no git = git config --global user.email "you@example.com"
git config --local -l

intalando o git = sudo apt-get install git-core

clonando uma pasta do github = git clone xxxxxxxxxxxxxxxxxxxxxxxxx

Subindo uma pasta para o github = dentro da pasta do github
                                  git init
                                  git add *
                                  git commit -m "xxxxx"
                                  git push
                                  usuario e senha


 xxxxxxxxxx  Comandos usados no linux xxxxxxxxxxxxxxxxxx

pwd = mostrar o caminho atual

ls = lista o conteudo da pasta atual

cd = mudar / navegar entre diretorios

mkdir = cria diretorio

rmdir = remove os diretorios que nao possuem arquivos

rm =  remove os diretorios e todos arquivos

pushd = empilha a pasta / diretorio atual

mv = move arquivos e pastas

cp = copia arquivor e ou pastas 

cp -r = copia todos arquivos

touch = cria um arquivo de texto

Exemplos do uso do ls = ls teste?aula.txt ira listar todos que sao teste1aula.txt

Comando para listar todo mundo que tem teste
ls teste*
teste1aula.txt  teste2aula.txt  teste3aula.txt

Comando que lista que tem a palavra teste e com 2 e 3
ls teste[2-3]*
teste1aula.txt  teste2aula.txt  teste3aula.txt

cat = lista o conteudo de um arquivo

cd - = utilizado para voltar no diretorio acessado

? = existe um caracter qualquer Ex = ls my?file

* = qualquer caracter, nenhum ou varias vezes Ex = ls m*file

| = redireciona a saida de um comando para o outro comando Ex = ls ~ | xargs wc

> = redireciona a saida Ex: cmd > out_file.txt

> = redireciona a entrada Ex: cmd < in_file.txt


xxxxxxxxxxxxxxxxxxxx   Caminhos Absolutos e relativos xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx


Caminho absoluto: Um caminho absoluto começa com o diretório raiz e segue a árvore, ramo por ramo, até chegar ao diretório ou arquivo desejado.
                  Caminhos absolutos sempre começam com /

Caminho relativo: Um nome de caminho relativo começa a partir do atual diretório de trabalho. Caminhos relativos nunca começam com /

Por exemplo:Suponha que você esteja trabalhando atualmente em seu diretório pessoal e queira mover para o diretório /usr/bin.
             As duas formas seguintes o levarão ao mesmo diretório do seu diretório pessoal:

Método de caminho absoluto: $ cd /usr/bin
Método de nome de caminho relativo: $ cd ../../usr/bin

Neste exemplo, o método caminho absoluto tem menos dígitos.


xxxxxxxxxxxxxxxxxxxx Trabalhando com arquivos xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx


    ls: Lista todos os arquivos do diretório
    
    df: Mostra a quantidade de espaço usada no disco rígido
    
    top: Mostra o uso da memória
    
    cd: Acessa uma determinada pasta (diretório)
    
    mkdir: Cria um diretório
    
    rm: Remove um arquivo/diretório
    
    cat: Abre um arquivo
    
    vi: Abre o editor vi(lê-se viai) para editar/criar arquivos
    
    nano : abre um editor.

    tac: o contrario do comando cat. escreve o conteudo do arquivo de tras para frente
    
    less: semelhante ao more. exibe arquivo de texto.
    
    head: mostra as primeiras linhas de um arquivo Ex: head -5 mostra as 5 primeiras linhas de um arquivo.   
    
    tail: ao contrario do comando head mostra-nos as ultimas linhas de um arquivo. Ex: tail -5 mostra as 5 ultimas linhas de um arquivo
    
    touch: é frequentemente usado para definir ou atualizar o acesso, alterar e modificar as datas de arquivos.
           Por predefinição, restaura o timestamp de um arquivo para corresponder à hora atual.
    
    No entanto, você tambem pode criar um arquivo vazio usando o touch:
    $ touch <filename>

    touch oferece várias opções, como esta:

    A opção -t permite que você defina o timestamp.
    
    Para definir o timestamp para uma hora específica:
    
    $ touch -t 03201600 meuarquivo
    $ ls -l

    Isso define o arquivo, meuarquivo, timestamp para 4 p.m., 20 de março (03 20 1600).    
  
    Retornar o tamanho de arquivo ou diretório em bytes (KB/MB) 

    $ du -hsb (nome do arquivo) => retorna o tamanho sempre em bytes;
    $ du -hsk (nome do arquivo) => retorna o tamanho sempre em KB;
    $ du -hsm (nome do arquivo) => retorna o tamanho sempre em MB;       

	
       xxxxxxx   Renomenado ou apagando um arquivo  xxxxxxxxxxxx

    rmdir = remove os diretorios que nao possuem arquivos

    rm =  remove os diretorios e todos arquivos
 
    pushd = empilha a pasta / diretorio atual

    mv = move arquivos e pastas

    cp = copia arquivor e ou pastas

    cp -r = copia todos arquivos
 
    rm -r = usado para excluir um diretorio ocupado
    
    rm -f = remove com forca um arquivo 
 
    rm -i = interativamente remove um arquivo

    rm -Rf = remove resursivamente todos os arquivos e diretorios de seu sistema linux ate a raiz - nuca deve-se executar este comando. 
  

    Exercicios 1)

 
    Crie dois arquivos vazios teste1 & teste2 com timestamp: 14 de março de 2018 2:00 PM usando o comando touch.
    R: touch -t 1803141600 teste3
       touch -t 1803141600 teste4


    Verifique a existência dos arquivos test1 e test2 usando o comando ls -l.
    R: Ls -l


    Renomeie o arquivo teste1 para new_test1 usando o comando mv.
    R: mv teste1 new_teste

    Remova o teste2 usando a opção rm sem opções.
    R: rm teste2


    Remova o arquivo new_test1 usando o comando rm sem nenhuma opção.
    R: rm new_teste1


    Crie um diretório dir1, usando o comando mkdir.
    R: mkdir dir1


    Remova o diretório dir1 usando o comando rmdir sem quaisquer opções.
    R: rmdir dir1
    
    Utilizando qual comando abaixo é possível visualizar todo o arquivo com possibilidade de SCROLL ?

    1 - tail
    2 - cat
    3 - less
    4 - head
    
    R: less
    
    Exercicios 2)
    
    1) A partir da sua pasta de trabalho, crie uma pasta chamada LabSO.YYYYMMDD.HHMM , 
       substituindo a máscara com a data e hora atuais
    2) Entre nessa pasta abra outra tela de terminal e entre na mesma pasta
     
    3) Crie um programa em Python (linhas.py) para gerar 1000 linhas : "Esta é linha 1", "Esta é linha 2",...
    
    4) Execute o programa linhas direcionando a saida para o arquivo linhas.txt (python linha.py)
    
    5) Na outra janela, execute um comando linux para visualizar todo o arquivo linhas.txt
     
    6) Execute o comando para visualizar apenas as primeiras linhas do arquivo
    
    7) Janela 1: Execute um comando linux para monitorar o arquivo linhas.txt de forma contínua, 
       sem parar quando chegar ao fim do arquivo. (dica: man tail)
       
    8) Janela 2: Execute o programa linhas direcionando a saída para o arquivo linhas.txt
       Repita o passo anterior várias vezes e olhe o resultado na janela 1
   


    Instruções para a prova
--------------------------

    1 - Criar um repositório no seu github com o nome prova-av1
    2 - Clonar este repositório na sua máquina local
    3 - Clonar o repositório https://github.com/salgado/labso.git 
    4 - Copiar todo o diretorio prova1-noite para a sua pasta prova-av1   
    5 - Editar o arquivo prova1-2017.txt com seu nome e as respostas
    6 - Enviar todos os arquivos para o seu github 
    7 - Preencher a prova e este formulario com seus dados 
    de envio: https://goo.gl/forms/sqrMM3wYS7ZYCYFC3


    Instruções básicas do github
----------------------------
    - clonar repositório
    git clone <url-do-seu-repositorio>

    - submeter arquivo da sua pasta
    git add <arquivo>
    git commit -m "minha mensagem"
    git push

- (se preciso for) sincronizar sua pasta com github
  git pull



XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX


Revisao para a prova
-------------------------------------------------
Com relação aos comandos do SO Linux, responda as perguntas abaixo:


1 - Quais são as famílias de distruição das seguintes versões de linux:
a-ubuntu; b-openSUSE e c-CentOS?

Resposta: a-Debian, b-SUSE, c-Fedora

2 - Renomear o arquivo prova1-2017.txt da sua pasta para prova1-seunome.txt . 
Ex.: prova1-alex.txt

Resposta: mv prova1-2017.txt prova1-luciano.txt

3 - Crie 3 arquivos em branco que comecem com seu nome e termina com uma 
sequencia 1, 2 e 3. 
Ex.: alex1.txt, alex2.txt, alex3.txt. Que comandos você utilizou?

Resposta: touch luciano1.txt luciano2.txt luciano3.txt


4 - Listar todos os arquivos vazios a partir da sua pasta principal e 
direcionar a saida para o terceiro arquivo do item anterior.

Resposta: find -type f -empty > gabriel3.txt
 

5 - Crie 1 pasta com seu nome+diadenascimento (ex.:alex25) e copie os 
3 arquivos criandos anteriormente para esta pasta.

Resposta: mkdir luciano6; cp luciano1.txt  luciano2.txt  luciano3.txt luciano6
 

6 - Utilizando wildcards, qual o comando para listar todos os arquivos 
que comecem com seu nome e termina com o numeral de 1 a 3 com extensão .txt?

Resposta: ls luciano[1-3].txt


7 - Existe um arquivo chamado access.log na sua pasta log. 
Qual é o ip que aparece no arquivo com mais frequencia e 
qual ip que aparece no arquivo com menos frequencia?

Resposta 1: less '^[0-9\.]*' access.log

Resposta 2: less '^[0-9?.]*' access.log


8 - Usando um comando linux, baixar o arquivo a seguir na sua 
pasta principal http://evc-cit.info/cit052/grepdata.txt

Resposta: wget http://evc-cit.info/cit052/grepdata.txt

9 - Com relação ao arquivo baixado no item anterior: 
Imprima todas as linhas que contenham uma vogal (a, e, i, o ou u) 
seguido de um único caractere seguido pela mesma vogal novamente. 
Assim, encontrará "eve" ou "adam" mas não "vera". Dica: \( e \) 

Resposta: grep '[a-u]\?\[a-u]' grepdata.txt


10 - Listar todo o conteudo (todos os arquivos e pastas)
a partir de sua pasta principal e direcionar a saida 
para o segundo arquivo do item 3.

Resposta: ls > luciano2.txt

<<<<<<< HEAD
11 - Mostrar todo o programa prog.c se os comentarios

resposta : grep -v '[//]' prog.c 
=======
11 - Clonar o repositório https://github.com/salgado/labso.git 

Resposta : git clone https://github.com/salgado/labso.git

12 - Copiar todo o diretorio trabalho para a sua pasta trabalho1-labso

Resposta : cd trabalho1-labso
           cp -r ../labso/trabalho .
>>>>>>> d8427495bece9da6ccc8fe30033786d406a78133
